#!/usr/bin/env node
/**
 * Module dependencies.
 */
const app = require('./app')
const debug = require('debug')('hrk24s:server')
const http = require('http')

/**
 * Normalize a port into a number, string, or false.
 */
const normalizePort = val => isNaN(parseInt(val, 10)) ? val : parseInt(val, 10) >= 0 ? parseInt(val, 10) : false

/**
 * Get port from environment and store in Express.
 */
const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

/**
 * Create HTTP server.
 */
const server = http.createServer(app)

/**
 * Event listener for HTTP server "error" event.
 */
const onError = error =>
{
  if (error.syscall !== 'listen') throw error

  const bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code)
  {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
const onListening = () =>
{

  const addr = server.address()
  const bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port
  debug('Listening on ' + bind)
}

/**
 * Kết nối Database
 */
const connect = require('../database/main/connect.js')
connect().then(null)


server.listen(port)
server.on('error', onError)
server.on('listening', onListening)





